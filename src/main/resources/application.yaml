# yaml表示以上对象
#person:
#  userName: zhangsan
#  boss: false
#  birth: 2019/12/12 20:12:33
#  age: 18
#  pet:
#    name: tomcat
#    weight: 23.4
#  interests: [篮球,游泳]
#  animal:
#    - jerry
#    - mario
#  score:
#    english:
#      first: 30
#      second: 40
#      third: 50
#    math: [131,140,148]
#    chinese: {first: 128,second: 136}
#  salarys: [3999,4999.98,5999.99]
#  allPets:
#    sick:
#      - {name: tom}
#      - {name: jerry,weight: 47}
#    health: [{name: mario,weight: 47}]

#设置静态资源访问时需要的前缀,避免与servlet访问的路径一致,导致静态资源不生效,默认的规则是/**
#静态资源的文件是可以直接访问的
#    这个打开会导致welcome页面失效
#spring:
#  mvc:
#    static-path-pattern: /res/**

#可以改变默认的静态资源路径
#方法显示过时,不建议使用
#  resources:
#    static-locations: classpath:/haha
#    static-locations: [classpath:/haha,....]#这样可以写进去多个对应的静态资源路径

#开启Rest风格
#表单提交会带上_method=PUT
#请求过来被HiddenHttpMethodFilter拦截
#请求是否正常，并且是POST
#获取到_method的值。
#兼容以下请求；PUT.DELETE.PATCH
#原生request（post），包装模式requesWrapper重写了getMethod方法，返回的是传入的值。
#过滤器链放行的时候用wrapper。以后的方法调用getMethod是调用requesWrapper的。
spring:
  mvc:
    hiddenmethod:
      filter:
        enabled: true #开启页面表单的Rest功能
  #设置数据库的基本面配置
  datasource:
    url: jdbc:mysql://localhost:3306/pet
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver

    druid:
      aop-patterns: com.atguigu.admin.*  #监控SpringBean
      filters: stat,wall     # 底层开启功能，stat（sql监控），wall（防火墙）

      stat-view-servlet:   # 配置监控页功能
        enabled: true
        login-username: admin
        login-password: admin
        resetEnable: false

      web-stat-filter:  # 监控web
        enabled: true
        urlPattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

      filter:
        stat:    # 对上面filters里面的stat的详细配置
          slow-sql-millis: 1000
          logSlowSql: true
          enabled: true
        wall:
          enabled: true
          config:
            drop-table-allow: false #这样所有的删除表的操作都会被防火墙拦截
            ##            update-allow: false#这样所有的更新操作都会被防火墙拦截
mybatis:
  #  指定mybatis配置文件的路径
  #  config-location: classpath:mybatis/mybatis-config.xml
  #  指定所有映射文件的路径
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true #开启驼峰命名法
####注意configuration和  config-location不能同时存在 , 会有冲突 , 所以二选一 , 建议全部放在yaml文件中
